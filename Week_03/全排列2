//给定一个可包含重复数字的序列，返回所有不重复的全排列。 
//
// 示例: 
//
// 输入: [1,1,2]
//输出:
//[
//  [1,1,2],
//  [1,2,1],
//  [2,1,1]
//] 
// Related Topics 回溯算法 
class Solution {
    public List<List<Integer>> permuteUnique(int[] nums) {
        List<List<Integer>> res = new ArrayList<>();
        Arrays.sort(nums);
        dfs(nums, res, new boolean[nums.length], new LinkedList<Integer>());

        return res;
    }

    private void dfs(int[] nums, List<List<Integer>> res, boolean[] visited, LinkedList<Integer> list) {
        if (list.size() == nums.length) {
            res.add(new LinkedList<Integer>(list));
            return;
        }

        for (int i = 0; i < nums.length; ++i) {
            if (visited[i]) continue;
            if (i > 0 && nums[i] == nums[i - 1] && visited[i - 1]) break;
            list.add(nums[i]);
            visited[i] = true;
            dfs(nums, res, visited, list);
            list.removeLast();
            visited[i] = false;
        }
    }
}