//给定两个整数 n 和 k，返回 1 ... n 中所有可能的 k 个数的组合。 
//
// 示例: 
//
// 输入: n = 4, k = 2
//输出:
//[
//  [2,4],
//  [3,4],
//  [2,3],
//  [1,2],
//  [1,3],
//  [1,4],
//] 
// Related Topics 回溯算法 
class Solution {
    public List<List<Integer>> combine(int n, int k) {
        List<List<Integer>> res = new ArrayList<>();

        if (k <= 0 || n <= 0) return res;

        dfs(res, n, k, 1, new ArrayList<Integer>());

        return res;
    }

    private void dfs(List<List<Integer>> res, int n, int k, int start, List<Integer> list) {
        if (k == list.size()) {
            res.add(new ArrayList<Integer>(list));
        }

        for (int i = start; i <= n; ++i) {
            list.add(i);
            dfs(res, n, k, i + 1, list);
            list.remove(list.size() - 1);
        }
    }
}